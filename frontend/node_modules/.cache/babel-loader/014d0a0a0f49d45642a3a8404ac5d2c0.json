{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/polinac/Projects/dictionary-word-finder/frontend/src/components/SearchDictionary.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport SearchIcon from '@material-ui/icons/Search';\nimport InputBase from '@material-ui/core/InputBase';\nimport WordList from './WordList';\nconst useStyles = makeStyles(theme => ({\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.black, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.black, 0.25)\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(3),\n      width: 'fit-content'\n    }\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  inputRoot: {\n    color: 'inherit'\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: '20ch'\n    }\n  }\n}));\n\nfunction SearchDictionary() {\n  _s();\n\n  const classes = useStyles();\n  const [inputText, setInputText] = useState('');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.search,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.searchIcon,\n          children: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InputBase, {\n          placeholder: \"Search\\u2026\",\n          classes: {\n            root: classes.inputRoot,\n            input: classes.inputInput\n          },\n          inputProps: {\n            'aria-label': 'search'\n          },\n          value: inputText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), \"Search Results\", /*#__PURE__*/_jsxDEV(WordList, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SearchDictionary, \"UwtLgwhKF+zNgFZ02TAFwG3QD14=\", false, function () {\n  return [useStyles];\n});\n\n_c = SearchDictionary;\nexport default SearchDictionary;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchDictionary\");","map":{"version":3,"sources":["/Users/polinac/Projects/dictionary-word-finder/frontend/src/components/SearchDictionary.js"],"names":["React","fade","makeStyles","Button","SearchIcon","InputBase","WordList","useStyles","theme","search","position","borderRadius","shape","backgroundColor","palette","common","black","marginRight","spacing","marginLeft","width","breakpoints","up","searchIcon","padding","height","pointerEvents","display","alignItems","justifyContent","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","SearchDictionary","classes","inputText","setInputText","useState","root","input"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { fade, makeStyles } from '@material-ui/core/styles'\nimport Button from '@material-ui/core/Button'\nimport SearchIcon from '@material-ui/icons/Search'\nimport InputBase from '@material-ui/core/InputBase'\nimport WordList from './WordList'\n\nconst useStyles = makeStyles((theme) => ({\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.black, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.black, 0.25)\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(3),\n      width: 'fit-content'\n    }\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  inputRoot: {\n    color: 'inherit'\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: '20ch'\n    }\n  }\n}))\n\nfunction SearchDictionary () {\n  const classes = useStyles()\n  const [inputText, setInputText] = useState('')\n\n  return (\n    <div>\n      <div style={{ display: 'flex' }}>\n        <div className={classes.search}>\n          <div className={classes.searchIcon}>\n            <SearchIcon />\n          </div>\n          <InputBase\n            placeholder=\"Searchâ€¦\"\n            classes={{\n              root: classes.inputRoot,\n              input: classes.inputInput\n            }}\n            inputProps={{ 'aria-label': 'search' }}\n            value={inputText}\n          />\n        </div>\n        <Button variant=\"contained\" color=\"primary\">\n          Search\n        </Button>\n      </div>\n      Search Results\n      <WordList />\n    </div>\n  )\n}\n\nexport default SearchDictionary\n"]},"metadata":{},"sourceType":"module"}