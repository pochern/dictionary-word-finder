{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/polinac/Projects/dictionary-word-finder/frontend/src/components/WordList.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable react/no-unescaped-entities */\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport PropTypes from 'prop-types';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    padding: theme.spacing(2)\n  },\n  img: {\n    margin: 'auto',\n    display: 'block',\n    maxWidth: '100%',\n    maxHeight: '100%'\n  }\n})); // function trim (str) {\n//   return str.length > 16\n//     ? str.slice(0, 16) + '...'\n//     : str\n// }\n\nWordList.propTypes = {\n  definitions: PropTypes.array,\n  onFavorite: PropTypes.func,\n  word: PropTypes.string\n};\n\nfunction WordList({\n  word,\n  definitions,\n  onFavorite\n}) {\n  _s();\n\n  const classes = useStyles();\n\n  if (definitions.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Your search has 0 results.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 12\n    }, this);\n  }\n\n  console.log('DEFSSS', definitions);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 3,\n    children: definitions.map((item, index) => /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 6,\n      sm: 3,\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        className: classes.paper,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [item.image_url && /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: classes.img,\n              alt: \"complex\",\n              src: item.image_url\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: true,\n            container: true,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: true,\n              container: true,\n              direction: \"column\",\n              spacing: 2,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: true,\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  gutterBottom: true,\n                  variant: \"h6\",\n                  children: word\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 58,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"subtitle1\",\n                  children: /*#__PURE__*/_jsxDEV(\"em\", {\n                    children: item.type\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 62,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"subtitle1\",\n                  gutterBottom: true,\n                  children: item.definition\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 21\n                }, this), item.example && /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  color: \"textSecondary\",\n                  children: [\"\\\"\", item.example, \"\\\"\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  color: \"secondary\",\n                  children: \"Add to favorites\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(WordList, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = WordList;\nexport default WordList;\n\nvar _c;\n\n$RefreshReg$(_c, \"WordList\");","map":{"version":3,"sources":["/Users/polinac/Projects/dictionary-word-finder/frontend/src/components/WordList.js"],"names":["React","makeStyles","Button","Grid","Paper","Typography","PropTypes","useStyles","theme","root","flexGrow","paper","padding","spacing","img","margin","display","maxWidth","maxHeight","WordList","propTypes","definitions","array","onFavorite","func","word","string","classes","length","console","log","map","item","index","image_url","type","definition","example"],"mappings":"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","sourcesContent":["/* eslint-disable react/no-unescaped-entities */\nimport React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Button from '@material-ui/core/Button'\nimport Grid from '@material-ui/core/Grid'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport PropTypes from 'prop-types'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    padding: theme.spacing(2)\n  },\n  img: {\n    margin: 'auto',\n    display: 'block',\n    maxWidth: '100%',\n    maxHeight: '100%'\n  }\n}))\n\n// function trim (str) {\n//   return str.length > 16\n//     ? str.slice(0, 16) + '...'\n//     : str\n// }\n\nWordList.propTypes = {\n  definitions: PropTypes.array,\n  onFavorite: PropTypes.func,\n  word: PropTypes.string\n}\n\nfunction WordList ({ word, definitions, onFavorite }) {\n  const classes = useStyles()\n  if (definitions.length === 0) {\n    return <p>Your search has 0 results.</p>\n  }\n  console.log('DEFSSS', definitions)\n\n  return (\n    <Grid container spacing={3}>\n      {definitions.map((item, index) => (\n        <Grid key={index} item xs={6} sm={3}>\n          <Paper className={classes.paper}>\n            <Grid container spacing={2}>\n              {item.image_url &&\n                <Grid item>\n                  <img className={classes.img} alt=\"complex\" src={item.image_url} />\n                </Grid>\n              }\n              <Grid item xs={12} sm container>\n                <Grid item xs container direction=\"column\" spacing={2}>\n                  <Grid item xs>\n                    <Typography gutterBottom variant=\"h6\">\n                      {word}\n                    </Typography>\n                    <Typography variant=\"subtitle1\">\n                      <em>{item.type}</em>\n                    </Typography>\n                    <Typography variant=\"subtitle1\" gutterBottom>\n                      {item.definition}\n                    </Typography>\n                    {item.example &&\n                      <Typography variant=\"body2\" color=\"textSecondary\">\n                        \"{item.example}\"\n                      </Typography>\n                    }\n                  </Grid>\n                  <Grid item>\n                    <Button color='secondary'>\n                      Add to favorites\n                    </Button>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Paper>\n        </Grid>\n      ))}\n    </Grid>\n  )\n}\n\nexport default WordList\n"]},"metadata":{},"sourceType":"module"}