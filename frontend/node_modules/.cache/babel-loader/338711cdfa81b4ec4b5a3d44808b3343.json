{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/polinac/Projects/dictionary-word-finder/frontend/src/components/ViewFavorites.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable no-unused-vars */\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { removeFromFavorites } from '../actions';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport Typography from '@material-ui/core/Typography';\nimport WordList from './WordList';\n\nfunction ViewFavorites() {\n  _s();\n\n  const definitions = useSelector(state => state.definitions);\n  const [filteredDefinitions, setFilteredDefinitions] = useState(definitions);\n  const [type, setType] = useState('');\n  const dispatch = useDispatch();\n  useEffect(() => {\n    applyFilter();\n  }, [definitions]);\n\n  const applyFilter = () => {\n    if (type !== '') {\n      setFilteredDefinitions(definitions.filter(elem => type === elem.definition.type));\n    } else {\n      setFilteredDefinitions(definitions);\n    }\n  };\n\n  const handleChange = e => {\n    setType(e.target.value);\n    console.log('THIS IS THE TYPEEEE', e.target.value);\n  };\n\n  const types = ['noun', 'verb', 'adjective', 'adverb', 'pronoun', 'preposition', 'conjunction', 'interjection', 'numeral', 'article', 'determiner'];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(FormControl, {\n        variant: \"outlined\",\n        style: {\n          minWidth: '5em',\n          marginBottom: '2em'\n        },\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          children: \"type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          value: type,\n          onChange: handleChange,\n          label: \"type\",\n          children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"\",\n            children: /*#__PURE__*/_jsxDEV(\"em\", {\n              children: \"None\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), types.map((elem, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: elem,\n            children: elem\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        style: {\n          marginBottom: '2em'\n        },\n        children: \"View Favorites\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(WordList, {\n        definitions: filteredDefinitions,\n        onRemove: (definition, word) => {\n          dispatch(removeFromFavorites({\n            definition,\n            word\n          }));\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ViewFavorites, \"146wxRQ/teazI6ohCYsqpiG/FBE=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = ViewFavorites;\nexport default ViewFavorites;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewFavorites\");","map":{"version":3,"sources":["/Users/polinac/Projects/dictionary-word-finder/frontend/src/components/ViewFavorites.js"],"names":["React","useEffect","useState","useDispatch","useSelector","removeFromFavorites","InputLabel","FormControl","MenuItem","Select","Typography","WordList","ViewFavorites","definitions","state","filteredDefinitions","setFilteredDefinitions","type","setType","dispatch","applyFilter","filter","elem","definition","handleChange","e","target","value","console","log","types","minWidth","marginBottom","map","index","word"],"mappings":"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","sourcesContent":["/* eslint-disable no-unused-vars */\nimport React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { removeFromFavorites } from '../actions'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport FormControl from '@material-ui/core/FormControl'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Select from '@material-ui/core/Select'\nimport Typography from '@material-ui/core/Typography'\nimport WordList from './WordList'\n\nfunction ViewFavorites () {\n  const definitions = useSelector(state => state.definitions)\n  const [filteredDefinitions, setFilteredDefinitions] = useState(definitions)\n  const [type, setType] = useState('')\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    applyFilter()\n  }, [definitions])\n\n  const applyFilter = () => {\n    if (type !== '') {\n      setFilteredDefinitions(definitions.filter((elem) => type === elem.definition.type))\n    } else {\n      setFilteredDefinitions(definitions)\n    }\n  }\n\n  const handleChange = (e) => {\n    setType(e.target.value)\n    console.log('THIS IS THE TYPEEEE', e.target.value)\n  }\n\n  const types = ['noun', 'verb', 'adjective', 'adverb', 'pronoun', 'preposition', 'conjunction', 'interjection', 'numeral', 'article', 'determiner']\n\n  return (\n    <div>\n      <div>\n        <FormControl variant=\"outlined\" style={{ minWidth: '5em', marginBottom: '2em' }}>\n          <InputLabel>type</InputLabel>\n          <Select\n            value={type}\n            onChange={handleChange}\n            label=\"type\"\n          >\n            <MenuItem value=\"\">\n              <em>None</em>\n            </MenuItem>\n            {types.map((elem, index) => (\n              <MenuItem key={index} value={elem}>{elem}</MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n        <Typography variant='h6' style={{ marginBottom: '2em' }}>\n          View Favorites\n        </Typography>\n        <WordList\n          definitions={filteredDefinitions}\n          onRemove={(definition, word) => {\n            dispatch(removeFromFavorites({ definition, word }))\n          }}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default ViewFavorites\n"]},"metadata":{},"sourceType":"module"}