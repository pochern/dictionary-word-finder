{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/polinac/Projects/dictionary-word-finder/frontend/src/components/SearchDictionary.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button'; // import CircularProgress from '@material-ui/core/CircularProgress'\n\nimport SearchIcon from '@material-ui/icons/Search';\nimport InputBase from '@material-ui/core/InputBase';\nimport WordList from './WordList';\nimport { fetchDefinitions } from '../utils/api';\nconst useStyles = makeStyles(theme => ({\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.black, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.black, 0.25)\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(3),\n      width: 'fit-content'\n    }\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  inputRoot: {\n    color: 'inherit'\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: '20ch'\n    }\n  }\n}));\n\nfunction SearchDictionary() {\n  _s();\n\n  const classes = useStyles();\n  const [inputValue, setInputValue] = useState('');\n  const [searchText, setSearchText] = useState('');\n  const [definitions, setDefinitions] = useState([]); // const [loadingResults, setLoadingResults] = useState(true)\n\n  const searchWord = () => {\n    if (inputValue === '') {\n      return;\n    }\n\n    setSearchText(inputValue);\n    console.log('INPUT VALUE', inputValue);\n    console.log('SEARCH TEXT', searchText);\n    fetchDefinitions(inputValue).then(data => setDefinitions(...data));\n  };\n\n  console.log('DAT DICTIONARY', definitions);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.search,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.searchIcon,\n          children: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InputBase, {\n          placeholder: \"Search\\u2026\",\n          classes: {\n            root: classes.inputRoot,\n            input: classes.inputInput\n          },\n          inputProps: {\n            'aria-label': 'search'\n          },\n          onChange: e => setInputValue(e.target.value),\n          value: inputValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => searchWord(),\n        variant: \"contained\",\n        color: \"primary\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Search Results\", searchText !== '' && /*#__PURE__*/_jsxDEV(WordList, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 8\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SearchDictionary, \"07QQK/Em2HKzlzjmLb7cjHaBB5g=\", false, function () {\n  return [useStyles];\n});\n\n_c = SearchDictionary;\nexport default SearchDictionary;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchDictionary\");","map":{"version":3,"sources":["/Users/polinac/Projects/dictionary-word-finder/frontend/src/components/SearchDictionary.js"],"names":["React","useState","fade","makeStyles","Button","SearchIcon","InputBase","WordList","fetchDefinitions","useStyles","theme","search","position","borderRadius","shape","backgroundColor","palette","common","black","marginRight","spacing","marginLeft","width","breakpoints","up","searchIcon","padding","height","pointerEvents","display","alignItems","justifyContent","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","SearchDictionary","classes","inputValue","setInputValue","searchText","setSearchText","definitions","setDefinitions","searchWord","console","log","then","data","root","input","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { fade, makeStyles } from '@material-ui/core/styles'\nimport Button from '@material-ui/core/Button'\n// import CircularProgress from '@material-ui/core/CircularProgress'\nimport SearchIcon from '@material-ui/icons/Search'\nimport InputBase from '@material-ui/core/InputBase'\nimport WordList from './WordList'\nimport { fetchDefinitions } from '../utils/api'\n\nconst useStyles = makeStyles((theme) => ({\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.black, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.black, 0.25)\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(3),\n      width: 'fit-content'\n    }\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  inputRoot: {\n    color: 'inherit'\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: '20ch'\n    }\n  }\n}))\n\nfunction SearchDictionary () {\n  const classes = useStyles()\n  const [inputValue, setInputValue] = useState('')\n  const [searchText, setSearchText] = useState('')\n  const [definitions, setDefinitions] = useState([])\n  // const [loadingResults, setLoadingResults] = useState(true)\n\n  const searchWord = () => {\n    if (inputValue === '') {\n      return\n    }\n\n    setSearchText(inputValue)\n    console.log('INPUT VALUE', inputValue)\n    console.log('SEARCH TEXT', searchText)\n\n    fetchDefinitions(inputValue)\n      .then(data => setDefinitions(...data))\n  }\n\n  console.log('DAT DICTIONARY', definitions)\n  return (\n    <div>\n      <div style={{ display: 'flex' }}>\n        <div className={classes.search}>\n          <div className={classes.searchIcon}>\n            <SearchIcon />\n          </div>\n          <InputBase\n            placeholder=\"Search…\"\n            classes={{\n              root: classes.inputRoot,\n              input: classes.inputInput\n            }}\n            inputProps={{ 'aria-label': 'search' }}\n            onChange={(e) => setInputValue(e.target.value)}\n            value={inputValue}\n          />\n        </div>\n        <Button\n          onClick={() => searchWord()}\n          variant=\"contained\"\n          color=\"primary\"\n        >\n          Search\n        </Button>\n      </div>\n      <div>\n       <div>\n              Search Results\n              {searchText !== '' && (\n                <WordList />)}\n            </div>\n      </div>\n    </div>\n  )\n}\n\nexport default SearchDictionary\n"]},"metadata":{},"sourceType":"module"}